import { VFC } from 'react'
import Head from 'next/head'
import { GetStaticProps, GetStaticPaths } from 'next'
import { ParsedUrlQuery } from 'node:querystring'
import { getAllPostCategories } from '../../../lib/category';
import {getTargetPosts} from '../../../lib/post'
import home from 'styles/Home.module.scss'
import Link from 'next/link'
import Image from 'next/image'
import { Category, Eyecatch } from '../../../types/post'
import { Categories } from '../../../types/category'
import { getAllCategories } from '../../../lib/category';

interface Params extends ParsedUrlQuery {
  id: string,
}

type Props = {
  posts: {
  id: string
  title: string
  createdAt: string
  category: Category
  eyecatch: Eyecatch | null
  }[],
  categories: Categories
}


export const getStaticPaths: GetStaticPaths<Params> = async () => {
  const paths = await getAllPostCategories()
  return {
    paths,
    fallback: false,
  }
}

export const getStaticProps: GetStaticProps<Props, Params> = async ({
  params
}) => {
  console.log("CategoryName: getStaticProps Start");

  const posts = await getTargetPosts(params.id)
  const categories = await getAllCategories();

  return {
    props: {
      posts,
      categories
    },
  }
}

/**
 * 対象のカテゴリの記事リスト
 * @param posts 表示する記事リスト
 * @returns VFC
 */
const CategoryId: VFC<Props> = ({ posts }) => {
  console.log("CategoryId: Start");

  return (
    <>
      <Head>
        <title>kazの保管庫</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" />
        <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons" />
      </Head>
      <div className={home.main}>
        <ul className={home.postList}>
          {posts && (
            posts.map((post) => (
            <li className={home.postRecord} key={post.id}>
              <Link href={`/posts/${post.id}`}>
                <a className={home.postPanel}>
                  {post.eyecatch ? (
                    <Image
                      className={home.img}
                      src={post.eyecatch.url}
                      alt="アイキャッチ画像"
                      width={300}
                      height={300}
                    />
                  ) : (
                    <Image
                      src="/images/free_img_gray.png"
                      alt="フリー画像"
                      width={300}
                      height={300}
                    />
                  )}
                  <div className={home.pannelBottom}>
                    <h2 className={home.recordTitle}>{post.title}</h2>
                    <div className={home.authorInfo}>
                      <span className={home.createdAt}>2020.5.18</span>
                    </div>
                  </div>
                </a>
              </Link>
            </li>
          )
          ))}
        </ul>
      </div>
      {/* <Sidebar categories={categories} inputSeach={searchPosts}/> */}
    </>
  )
}

export default CategoryId;
